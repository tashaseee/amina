// IceCreamCatalog.jsx
import React, { useState } from 'react';
import { useCart } from '../CartContext/CartContext';
import './IceCreamCatalog.css';

const IceCreamCatalog = () => {
  const [selectedProduct, setSelectedProduct] = useState(null);
  const [currentDots, setCurrentDots] = useState({
    section1: 0,
    section2: 0,
    section3: 0,
    section4: 0
  });
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º setIsCartOpen –≤–º–µ—Å—Ç–æ toggleCart
  const { addToCart, setIsCartOpen } = useCart();

  // Mock product data based on your screenshots
  const products = {
    section1: [
      { id: 1, name: '–ß–û–ö–û-–¢–ê–ö–û –ê–°–°–û–†–¢–ò', price: 5000, rating: 4.8, description: '–ê—Å—Å–æ—Ä—Ç–∏ –≤—Å–µ—Ö –≤–∫—É—Å–æ–≤.', images: ['p11.png', 'p12.png'] },
      { id: 2, name: '–ß–û–ö–û-–¢–ê–ö–û –®–û–ö–û–õ–ê–î', price: 5000, rating: 4.8, description: '–®–æ–∫–æ–ª–∞–¥–Ω–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ —Å –≤–∞—Ñ–ª—è–º–∏ —Ç–∞–∫–æ.', images: ['p21.png', 'p22.png'] },
      { id: 3, name: '–ß–û–ö–û-–¢–ê–ö–û –ö–ê–†–ê–ú–ï–õ–¨', price: 5000, rating: 4.8, description: '–ú–æ—Ä–æ–∂–µ–Ω–æ–µ –ø–ª–æ–º–±–∏—Ä —Å –≤–∞—Ñ–ª—è–º–∏ —Ç–∞–∫–æ —Å–æ –≤–∫—É—Å–æ–º –∫–∞—Ä–∞–º–µ–ª–∏.', images: ['p31.png', 'p32.png'] },
      { id: 4, name: '–ß–û–ö–û-–¢–ê–ö–û –ö–û–§–ï', price: 5000, rating: 4.9, description: '–ú–æ—Ä–æ–∂–µ–Ω–æ–µ —Å –≤–∞—Ñ–ª—è–º–∏ —Ç–∞–∫–æ —Å–æ –≤–∫—É—Å–æ–º –∫–æ—Ñ–µ.', images: ['p41.png', 'p42.png'] },
    ],
    section2: [
      { id: 5, name: '–§—Ä—É–∫—Ç–æ–≤—ã–π –ª–µ–¥ —Å–ª–∏–≤–∞', price: 1500, rating: 4.8, description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å –∫—É—Å–æ—á–∫–∞–º–∏ —Ñ—Ä—É–∫—Ç–æ–≤.', images: ['p91.png', 'p92.png'] },
      { id: 6, name: '–§—Ä—É–∫—Ç–æ–≤—ã–π –ª–µ–¥ –ø–∏–Ω–∞ –∫–æ–ª–∞–¥–∞', price: 1500, rating: 5, description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å –∫—É—Å–æ—á–∫–∞–º–∏ —Ñ—Ä—É–∫—Ç–æ–≤.', images: ['p101.png', 'p102.png'] },
      { id: 7, name: '–§—Ä—É–∫—Ç–æ–≤—ã–π –ª–µ–¥ –º–∞–Ω–≥–æ-–∫–æ–∫–æ—Å', price: 1500, rating: 4.6, description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å –∫—É—Å–æ—á–∫–∞–º–∏ —Ñ—Ä—É–∫—Ç–æ–≤.', images: ['p71.png', 'p72.png'] },
      { id: 8, name: '–§—Ä—É–∫—Ç–æ–≤—ã–π –ª–µ–¥ –∫–ª—É–±–Ω–∏–∫–∞-–º–∞–ª–∏–Ω–∞', price: 1500, rating: 4.8, description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å –∫—É—Å–æ—á–∫–∞–º–∏ —Ñ—Ä—É–∫—Ç–æ–≤.', images: ['p81.png', 'p82.png'] },
    ],
    section3: [
      { id: 9, name: '–®–û–ö–û–õ–ê–î–ù–û–ï –ú–û–†–û–ñ–ï–ù–û–ï', price: 3500, rating: 4.8, description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ –∏–∑ —Å–≤–µ–∂–∏—Ö —Å–ª–∏–≤–æ–∫ –∏ –∫–∞–∫–∞–æ 70%.', images: ['p121.png', 'p122.png'] },
      { id: 10, name: '–ú–û–†–û–ñ–ï–ù–û–ï –¢–ï–ú–ù–´–ô –®–û–ö–û–õ–ê–î', price: 3500, rating: 4.9, description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ –∏–∑ —Å–≤–µ–∂–∏—Ö —Å–ª–∏–≤–æ–∫ –∏ –∫–∞–∫–∞–æ 75%.', images: ['p131.png', 'p132.png'] },
      { id: 11, name: '–ú–û–†–û–ñ–ï–ù–û–ï –° –ö–†–û–®–ö–û–ô –®–û–ö–û–õ–ê–î–ê', price: 3500, rating: 4.9, description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ –∏–∑ —Å–≤–µ–∂–∏—Ö —Å–ª–∏–≤–æ–∫ —Å –∫—Ä–æ—à–∫–æ–π —à–æ–∫–æ–ª–∞–¥–∞.', images: ['p141.png', 'p142.png'] },
      { id: 12, name: '–ú–û–†–û–ñ–ï–ù–û–ï –°–û –í–ö–£–°–û–ú –ú–ê–ù–ì–û', price: 3500, rating: 4.8, description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ –∏–∑ —Å–≤–µ–∂–∏—Ö —Å–ª–∏–≤–æ–∫ –∏ –º–∞–Ω–≥–æ.', images: ['p151.png', 'p152.png'] },
    ],
    section4: [
      { id: 13, name: '–≠–°–ö–ò–ú–û –®–û–ö–û–õ–ê–î–ù–û–ï', price: 1300, rating: 4.9, description: '–í–∫—É—Å–Ω–æ–µ –ª–∞–∫–æ–º—Å—Ç–≤–æ –Ω–∞ –ø–∞–ª–æ—á–∫–µ.', images: ['p171.png', 'p172.png'] },
      { id: 14, name: '–≠–°–ö–ò–ú–û –° –û–†–ï–•–ê–ú–ò', price: 1300, rating: 4.8, description: '–í–∫—É—Å–Ω–æ–µ –ª–∞–∫–æ–º—Å—Ç–≤–æ –Ω–∞ –ø–∞–ª–æ—á–∫–µ.', images: ['p181.png', 'p182.png'] },
      { id: 15, name: '–ö–õ–£–ë–ù–ò–ß–ù–´–ô MINIS', price: 8000, rating: 4.9, description: '–®–æ–∫–æ–ª–∞–¥–Ω—ã–µ —à–∞—Ä–∏–∫–∏ —Å –º–æ—Ä–æ–∂–µ–Ω—ã–º –∏  —Å –∫—É—Å–æ—á–∫–∞–º–∏ –∫–ª—É–±–Ω–∏–∫–∏', images: ['p211.png', 'p212.png'] },
      { id: 16, name: '–ú–û–†–û–ñ–ï–ù–û–ï –ß–ï–†–ù–ò–ö–ê', price: 6000, rating: 4.9, description: '–¢–æ—Ä—Ç –º–æ—Ä–æ–∂–µ–Ω–æ–µ —Å –∫—É—Å–æ—á–∫–∞–º–∏ –±–∏—Å–∫–≤–∏—Ç–∞.', images: ['p161.png', 'p162.png'] },
    ],
  };

  const handleProductClick = (product) => {
    setSelectedProduct(product);
  };

  const closeModal = () => {
    setSelectedProduct(null);
  };

  const handleAddToCart = (product, event) => {
    event.stopPropagation(); // Prevent opening modal when clicking the cart button
    addToCart(product);
    
    // Display a quick notification
    const button = event.currentTarget;
    const originalContent = button.innerHTML;
    button.innerHTML = '‚úì';
    button.classList.add('added-to-cart');
    
    setTimeout(() => {
      button.innerHTML = originalContent;
      button.classList.remove('added-to-cart');
    }, 1000);
  };

  const scrollSection = (section, direction) => {
    const container = document.querySelector(`.section-${section} .products-container`);
    const scrollAmount = container.offsetWidth * 0.8;
    
    if (direction === 'left') {
      container.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
      if (currentDots[`section${section}`] > 0) {
        setCurrentDots(prev => ({
          ...prev,
          [`section${section}`]: prev[`section${section}`] - 1
        }));
      }
    } else {
      container.scrollBy({ left: scrollAmount, behavior: 'smooth' });
      if (currentDots[`section${section}`] < 1) { // assuming we have 2 dots (0 and 1)
        setCurrentDots(prev => ({
          ...prev,
          [`section${section}`]: prev[`section${section}`] + 1
        }));
      }
    }
  };

  const renderSection = (title, subtitle, sectionKey, sectionNumber) => {
    return (
      <div id={`section-${sectionNumber}`} className={`catalog-section section-${sectionNumber}`}>
        <div className="section-header">
          <h2>{title}</h2>
          <p>{subtitle}</p>
          <span className="arrow right-arrow" onClick={() => scrollSection(sectionNumber, 'right')}>‚Üí</span>
        </div>
        
        <div className="products-container">
          {products[sectionKey].map(product => (
            <div key={product.id} className="product-card" onClick={() => handleProductClick(product)}>
              <div className="wishlist-icon"></div>
              <img 
                src={product.images[0]} 
                alt={product.name} 
                className="product-image"
              />
              <div className="product-info">
                <h3>{product.name}</h3>
                <p>{product.description}</p>
                <div className="product-rating">
                  ‚òÖ {product.rating}/5
                </div>
                <div className="product-price-cart">
                  <span className="price">{product.price}‚Ç∏</span>
                  <button 
                    className="add-to-cart-btn"
                    onClick={(e) => handleAddToCart(product, e)}
                  >
                    <i className="cart-icon">üõí</i>
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    );
  };

  return (
    <div className="ice-cream-catalog">
      {renderSection('–í–ê–§–õ–ò –ú–û–†–û–ñ–ï–ù–ù–û–ï', '–í–∞—Ñ–ª–∏ —Ç–∞–∫–æ —Å –º–æ—Ä–æ–∂–µ–Ω–Ω—ã–º –∏–∑–º–µ–Ω—è—Ç –≤–∞—à –¥–µ–Ω—å!', 'section1', 1)}
      {renderSection('–§–†–£–ö–¢–û–í–´–ô –õ–ï–î', '–û—Å–≤–µ–∂–∏—Ç–µ—Å—å –≤ –∂–∞—Ä–∫–∏–π –¥–µ–Ω—å –≤–∫—É—Å–Ω—ã–º –ª–µ—Ç–Ω–∏–º —ç—Å–∫–∏–º–æ!', 'section2', 2)}
      {renderSection('–ú–û–†–û–ñ–ï–ù–û–ï', '–ù–∞–π—Ç–∏ —Å–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∫—É—Å –º–æ—Ä–æ–∂–µ–Ω–æ–≥–æ —Ç–æ–ª—å–∫–æ —É –Ω–∞—Å!', 'section3', 3)}
      {renderSection('–ú–û–†–û–ñ–ï–ù–û–ï –ë–ê–†', '–†–∞–π –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π —Å–ª–∞–¥–∫–æ–≥–æ!', 'section4', 4)}

      {selectedProduct && (
        <div className="product-modal-overlay" onClick={closeModal}>
          <div className="product-modal" onClick={e => e.stopPropagation()}>
            <button className="close-modal" onClick={closeModal}>√ó</button>
            <div className="modal-content">
              <div className="modal-image-container">
                <img 
                  src={selectedProduct.images[1]} 
                  alt={`${selectedProduct.name} back view`} 
                  className="modal-image"
                />
              </div>
              <div className="modal-info">
                <h3>{selectedProduct.name}</h3>
                <p className="modal-description">{selectedProduct.description}</p>
                <div className="modal-rating">‚òÖ {selectedProduct.rating}/5</div>
                <div className="modal-price">{selectedProduct.price}‚Ç∏</div>
                <button 
                  className="add-to-cart-modal"
                  onClick={() => {
                    addToCart(selectedProduct);
                    closeModal();
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º setIsCartOpen(true) –≤–º–µ—Å—Ç–æ toggleCart –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–æ—Ä–∑–∏–Ω—ã
                    setTimeout(() => setIsCartOpen(true), 300);
                  }}
                >
                  –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default IceCreamCatalog;